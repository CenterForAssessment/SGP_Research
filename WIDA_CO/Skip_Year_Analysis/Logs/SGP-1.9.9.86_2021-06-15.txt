
Started abcSGP Tuesday June 15 22:41:13 2021


	abcSGP(
		 sgp_object = WIDA_CO_Data_LONG
		steps = c("prepareSGP", "analyzeSGP", "combineSGP", "outputSGP")
		sgp.percentiles = FALSE
		sgp.projections = FALSE
		sgp.projections.lagged = FALSE
		sgp.percentiles.baseline = TRUE
		sgp.projections.baseline = FALSE
		sgp.projections.lagged.baseline = FALSE
		parallel.config = list(BACKEND = "PARALLEL", WORKERS = list(BASELINE_PERCENTILES = 8))
		save.intermediate.results = FALSE
		sgp.config = WIDA_CO_2021_Baseline_Config )


Started prepareSGP Tuesday June 15 22:41:13 2021


	prepareSGP(
		 data = sgp_object
		data_supplementary = data_supplementary
		state = state
		var.names = prepareSGP.var.names
		create.additional.variables = prepareSGP.create.additional.variables
		fix.duplicates = fix.duplicates )

	NOTE: Some values of observed data reside outside the LOSS/HOSS values in the SGPstateData meta-data for WIDA_CO. Examine saved output knots_boundaries_data_min_max for details.
	NOTE: All values of observed data reside within the BOUNDARY values in the SGPstateData meta-data for WIDA_CO.
Finished prepareSGP Tuesday June 15 22:41:14 2021 in 0.694 Seconds 

	CSEMs are required in SGPstateData to simulate SGPs for confidence interval calculations. Confidence intervals will not be calculated.

Started analyzeSGP Tuesday June 15 22:41:14 2021


	analyzeSGP(
		 sgp_object = sgp_object
		state = state
		years = years
		content_areas = content_areas
		grades = grades
		sgp.percentiles = sgp.percentiles
		sgp.projections = sgp.projections
		sgp.projections.lagged = sgp.projections.lagged
		sgp.percentiles.baseline = sgp.percentiles.baseline
		sgp.projections.baseline = sgp.projections.baseline
		sgp.projections.lagged.baseline = sgp.projections.lagged.baseline
		sgp.minimum.default.panel.years = sgp.minimum.default.panel.years
		sgp.use.my.coefficient.matrices = sgp.use.my.coefficient.matrices
		sgp.test.cohort.size = sgp.test.cohort.size
		return.sgp.test.results = return.sgp.test.results
		simulate.sgps = simulate.sgps
		calculate.simex = calculate.simex
		calculate.simex.baseline = calculate.simex.baseline
		calculate.srs = calculate.srs
		calculate.srs.baseline = calculate.srs.baseline
		goodness.of.fit.print = goodness.of.fit.print
		sgp.config = sgp.config
		parallel.config = parallel.config
		verbose.output = verbose.output
		get.cohort.data.info = get.cohort.data.info
		sgp.sqlite = sgp.sqlite
		sgp.percentiles.equated = sgp.percentiles.equated
		sgp.percentiles.equating.method = sgp.percentiles.equating.method
		sgp.percentiles.calculate.sgps = sgp.percentiles.calculate.sgps
		SGPt = SGPt
		fix.duplicates = fix.duplicates )

	Started studentGrowthPercentiles: Tuesday June 15 22:41:15 2021
		Content Area: READING, Year: 2021, Grade Progression: 9, 10, 12 BASELINE (N=1,302)
	Finished studentGrowthPercentiles: Tuesday June 15 22:41:15 2021 in 0.597 Seconds

	Started studentGrowthPercentiles: Tuesday June 15 22:41:15 2021
		Content Area: READING, Year: 2021, Grade Progression: 8, 9, 11 BASELINE (N=1,697)
	Finished studentGrowthPercentiles: Tuesday June 15 22:41:15 2021 in 0.64 Seconds

	Started studentGrowthPercentiles: Tuesday June 15 22:41:15 2021
		Content Area: READING, Year: 2021, Grade Progression: 7, 8, 10 BASELINE (N=2,016)
	Started studentGrowthPercentiles: Tuesday June 15 22:41:15 2021
	Finished studentGrowthPercentiles: Tuesday June 15 22:41:16 2021 in 0.897 Seconds

		Content Area: READING, Year: 2021, Grade Progression: 6, 7, 9 BASELINE (N=2,620)
	Started studentGrowthPercentiles: Tuesday June 15 22:41:15 2021
	Finished studentGrowthPercentiles: Tuesday June 15 22:41:16 2021 in 1.016 Seconds

		Content Area: READING, Year: 2021, Grade Progression: 5, 6, 8 BASELINE (N=3,369)
	Finished studentGrowthPercentiles: Tuesday June 15 22:41:16 2021 in 1.059 Seconds

	Started studentGrowthPercentiles: Tuesday June 15 22:41:15 2021
	Started studentGrowthPercentiles: Tuesday June 15 22:41:15 2021
		Content Area: READING, Year: 2021, Grade Progression: 4, 5, 7 BASELINE (N=3,542)
		Content Area: READING, Year: 2021, Grade Progression: 3, 4, 6 BASELINE (N=3,649)
	Finished studentGrowthPercentiles: Tuesday June 15 22:41:16 2021 in 1.14 Seconds

	Finished studentGrowthPercentiles: Tuesday June 15 22:41:16 2021 in 1.133 Seconds

	Started studentGrowthPercentiles: Tuesday June 15 22:41:15 2021
		Content Area: READING, Year: 2021, Grade Progression: 2, 3, 5 BASELINE (N=4,929)
	Finished studentGrowthPercentiles: Tuesday June 15 22:41:16 2021 in 1.284 Seconds

	Started studentGrowthPercentiles: Tuesday June 15 22:41:16 2021
		Content Area: READING, Year: 2021, Grade Progression: 0, 2 BASELINE (N=6,784)
	Finished studentGrowthPercentiles: Tuesday June 15 22:41:17 2021 in 0.821 Seconds

	Started studentGrowthPercentiles: Tuesday June 15 22:41:15 2021
		Content Area: READING, Year: 2021, Grade Progression: 0, 1, 3 BASELINE (N=6,727)
	Finished studentGrowthPercentiles: Tuesday June 15 22:41:17 2021 in 1.237 Seconds

	Started studentGrowthPercentiles: Tuesday June 15 22:41:15 2021
		Content Area: READING, Year: 2021, Grade Progression: 1, 2, 4 BASELINE (N=6,088)
	Finished studentGrowthPercentiles: Tuesday June 15 22:41:17 2021 in 1.782 Seconds

Finished analyzeSGP Tuesday June 15 22:41:20 2021 in 6.683 Seconds 

Started combineSGP Tuesday June 15 22:41:20 2021
Finished combineSGP Tuesday June 15 22:41:21 2021 in 0.145 Seconds 


Started outputSGP Tuesday June 15 22:41:21 2021: Files produced from outputSGP saved in 'Data'



	outputSGP(
		 sgp_object = sgp_object
		state = state
		output.type = outputSGP.output.type
		outputSGP_SUMMARY.years = years
		outputSGP_SUMMARY.content_areas = content_areas
		outputSGP_INDIVIDUAL.years = years
		outputSGP_INDIVIDUAL.content_areas = content_areas
		outputSGP.student.groups = intersect(names(sgp_object@Data), subset(sgp_object@Names, names.type == "demographic" & names.output == TRUE, select = names.provided, drop = TRUE))
		outputSGP.directory = outputSGP.directory )

	Started LONG data production in outputSGP Tuesday June 15 22:41:21 2021
	Finished LONG data production in outputSGP Tuesday June 15 22:41:23 2021 in 2.498 Seconds 

	Started LONG FINAL YEAR data production in outputSGP Tuesday June 15 22:41:23 2021
	Finished LONG FINAL YEAR data production in outputSGP Tuesday June 15 22:41:24 2021 in 0.549 Seconds 

	Started WIDE data production in outputSGP Tuesday June 15 22:41:24 2021
	Finished WIDE data production in outputSGP Tuesday June 15 22:41:27 2021 in 3.175 Seconds 

Finished outputSGP Tuesday June 15 22:41:27 2021 in 6.272 Seconds 

Finished abcSGP Tuesday June 15 22:41:27 2021 in 13.831 Seconds 

